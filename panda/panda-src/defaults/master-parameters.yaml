global_parameters:
   ### Output precision for gct tables
  output_precision:
    ndigits: 5

  missing_values_and_filtering:
    na_max: 0.7                  # maximum allowed NA values (per protein/site/row), can be fraction. Set as NULL to turn off na filtering.
    sample_na_max: 0.8           # maximum allowed fraction of NA values per sample/column; pipeline error if violated
    nmiss_factor: 0.5            # for some situations, a more stringent condition is needed
    # panoply_filter specific
    sd_filter_threshold: 0.5     # SD threshold for SD filtering. Set as NULL to turn off SD filtering.
    combine_replicates: 'mean'   # method for combining replicate samples; can be 'first', 'mean', or 'median'. Set as NULL to turn off replicate combination.
    no_na: FALSE                 # filter rows with any NA values.
    separate_qc_types: FALSE     # separate different QC types (e.g. pass, fail, etc.) into distinct GCT files


  ### Gene mapping
  # gene mapping not needed -- use SM geneSymbol (but map to official symbols for CNA analysis)
  gene_mapping:
    # Policy for combining/collapsing duplicate gene names:
    duplicate_gene_policy: maxvar
    protein_id_col: 'id'              # provide name of column in phospho row metadata that indicates protein identifier/accession number
    protein_id_type: 'ENSEMBLPROT'    # if 'protein_id_col' uses a different protein identifier/accession number, please specify: "ACCNUM", "ALIAS", "ENSEMBL", "ENSEMBLPROT", "ENSEMBLTRANS", "ENTREZID", "ENZYME", "EVIDENCE", "EVIDENCEALL", "GENENAME", "GENETYPE", "GO", "GOALL", "IPI", "MAP", "OMIM", "ONTOLOGY", "ONTOLOGYALL", "PATH", "PFAM", "PMID", "PROSITE", "REFSEQ", "SYMBOL", "UCSCKG", "UNIPROT"
    gene_id_col: 'geneSymbol'         # now used by cmap to determine genesymbol column name
  organism: human

panoply_parse_sm_table:
  apply_numratio_filter: TRUE     # filter rows by min.numratio
  min_numratio_fraction: 0.25     # fraction of samples in which min.numratio should be present to retain protein/phosphosite
  label_type_for_ms_exp:
    label_type: TMT10             # alternatives: iTRAQ4, TMT10.126, TMT11
  species_filter: TRUE
  gct_file_ids: #used in config.r 
    proteome:
      min_numratio: 2
    phosphoproteome:
      min_numratio: 1


panoply_normalize_ms_data:
  normalization:
    norm_method: '2comp'           # options: 2comp (default), median, mean
    alt_method: 'median'           # alt.method for comparison -- will not be used downstream


panoply_rna_protein_correlation:
  rna:
    rna_sd_threshold: 1            # for variation filter (set to NA to disable)
    profile_plot_top_n: 25
    rna_row_norm_method: 'median'


panoply_harmonize:
  pome_gene_id_col: 'GeneSymbol'
  cna_gene_id_col: 'id' # This and below get assigned to the same thing within the script I seperated here for clarity?
  rna_gene_id_col: 'id'

panoply_omicsev:
  class_column_name: 'Type'
  batch_column_name: 'Experiment'
  data_log_transformed: TRUE
  rna_log_transformed: TRUE
  do_function_prediction: FALSE

panoply_association:
  fdr_assoc: 0.01
  
panoply_association_report:
  fdr_value: 0.01

panoply_sample_qc:
  cor_threshold: 0.4
  #?heatmap_palette: "RdYlBu"
  #?put sample colors on here?


panoply_cna_analysis:
  cna_parallelism:
    pe_max_default: 250            # default maximum processors/jobs
  fdr_cna_corr: 0.05
  min_cna_N: 5 #cna-analysis-setup.r


panoply_cna_correlation_report:
  fdr: 0.05


panoply_rna_protein_correlation_report:
  fdr: 0.05


panoply_cons_cluster:
  clustering_sd_threshold: 2   # threshold for filtering data before consensus clustering
  clustering_na_threshold: 0.5 # max fraction of missing values for clustering; rest are imputed


panoply_cmap_analysis:
  # CMAP setup/initialization:
  cna_threshold: 0.3               # copy number up/down if abs (log2(copy number) - 1) is > cna.threshold (default: 0.3)
  cna_effects_threshold: 15        # min number of samples with up/down copy number to include gene for CMAP analysis (default: 15)
  min_sigevents: 20                # gene must have at least this many significant trans events to be considered (default: 20)  
  max_sigevents: 1500              # if a gene has more then max.sigevents, the top max.sigevents will be chosen
  top_N: 500                       # maximum number of genes to run CMAP enrichment on (default: 500)
  fdr_pvalue: 0.05                 # FDR for CNA correlations (default: 0.05)
  log_transform: FALSE      # if TRUE, log transform input data
  must_include_genes: NULL         # genes that must be included in the CMAP analysis (vector, default: NULL)
  # CMAP connectivity score and statistical significance:
  cis_fdr: fdr.pvalue              # FDR for cis-correlations (default: 0.05)
  legacy_score: FALSE              # if TRUE, legacy connectivity score will be calculated (using mean rank points), with permutation FDR
                                   # if FALSE, enrichement will be based on fisher test of outlier scores, with BH-FDR (default)
  rankpt_n: 4                      # number of CMAP profiles to consider when calculating mean rank point (default: 4)
  mean_rankpt_threshold: 85        # min value of mean rank point for gene signature to be considered enriched (default: 85)
  cmap_fdr: 0.25                   # BH-FDR threshold for fisher test of outlier scores, for gene to be considered enriched
  # CMAP annotation
  alpha: fdr.pvalue      # p-value threshold for cmap profile zscores and enrichments



panoply_immune_analysis:
  immune_enrichment_fdr: 0.05
  immune_enrichment_subgroups: NULL
  immune_heatmap_width: 10
  immune_heatmap_height: 15

panoply_blacksheep:
  apply_filtering: TRUE
  identifiers_file: NULL
  groups_file: NULL
  fraction_samples_cutoff: 0.3
  fdr_value: 0.05

panoply_mimp:
  groups_file_path: NULL                        # groups file is optional, if provided will add annotation tracks to heatmap
  search_engine: "SpectrumMill"                 # name of search engine used to process phospho data. Options are "SpectrumMill" or "other"
  phosphosite_col: NULL                         # if search_engine = "other," provide name of column in phospho row metadata that indicates phosphosite position
  protein_id_col: NULL                          # if search_engine = "other," provide name of column in phospho row metadata that indicates protein identifier/accession number
  protein_id_type: NULL                         # if 'protein_id_col' uses a different protein identifier/accession number, please specify: "ACCNUM", "ALIAS", "ENSEMBL", "ENSEMBLPROT", "ENSEMBLTRANS", "ENTREZID", "ENZYME", "EVIDENCE", "EVIDENCEALL", "GENENAME", "GENETYPE", "GO", "GOALL", "IPI", "MAP", "OMIM", "ONTOLOGY", "ONTOLOGYALL", "PATH", "PFAM", "PMID", "PROSITE", "REFSEQ", "SYMBOL", "UCSCKG", "UNIPROT"
  mutation_AA_change_colname: "Protein_Change"  # name of column in mutation MAF file that indicates amino acid change due to mutation
  mutation_type_col: "Variant_Classification"   # name of column in mutation MAF file that indicates type of mutation (aka missense)
  sample_id_col: "Tumor_Sample_Barcode"         # name of column in mutation MAF file that indicates patient/sample ID 
  transcript_id_col: "refseq_mrna_id"           # name of column in mutation MAF file that indicates transcript identifier

panoply_ptm_normalization:
  accession_number_colname: 'id.description'
  accession_numbers_colname: 'accession_numbers'    # set to NULL if not present
  accession_numbers_separator: '|'                  # ignored if accession_numbers_colname is NULL
  score_colname: 'scoreUnique'                      # set to NULL if absent; ignored if accession_numbers_colname is NULL

########################################
## NMF clustering
panoply_nmf:

  ## clustering
  kmin: 2              ## minimum number of clusters    
  kmax: 8             ## maximum number of clusters
  exclude_2: TRUE      ## if TRUE, k=2 will be excluded from determining the optimal number of clusters

  #########################
  ## NMF parameters
  nrun: 50         ## number of iterations
  seed: random     ## initialization method for the itertions
  method: lee      ## NMF method implemented in R-package 'NMF'   
  bnmf: FALSE      ## NOT SUPPORTED

  #########################
  ## filtering
  filt_mode: global   ## global, separate, equal
  sd_filt: 0.05       ## min SD percentile to remove
  
  #########################
  ## z-scoring
  z_score: TRUE        ## should the data be z-scored?
  z_score_mode: rowcol ## z-score mode: row (z-score rows), col (z-score columns), rowcol (z-score rows and then columns) 
 
########################################
## NMF figure generation & analysis
panoply_nmf_postprocess:

  #########################
  ## driver features 
  top_n_features: 25            ## number of driver-features (per cluster) to plot expression data for

  #########################
  ## overrepresentation 
  ## analysis
  ora_pval: 0.01         ## max. p-value for overrepresentation analysis (Fisher's exact test)
  ora_max_categories: 10 ## max. number of levels in a annotation category to be included in the
                         ## overrepresentation analysis

  #########################
  ## feature selection
  feature_fdr: 0.01    ## max. FDR for 2-sample t-test


################################
## ssGSEA default  parameters (projection)
panoply_ssgsea:
  nperm: 1000
  weight: 0.75
  sample_norm_type: "rank"      ## rank, log, log.rank, none
  correl_type: "z.score"        ## "rank", "z.score", "symm.rank"
  statistic: "area.under.RES"   ## "area.under.RES", "Kolmogorov-Smirnov" 
  output_score_type: "NES"      ## 'Score type: "ES" - enrichment score,  "NES" - normalized ES'
  min_overlap: 10               ## 'Minimal overlap between signature and data set.'
  extended_output: TRUE         ## 'If TRUE additional stats on signature coverage etc. will be included as row annotations in the GCT results files.'
  export_signat_gct: TRUE       ## For each signature export expression GCT files.
  global_fdr: FALSE             ## If TRUE global FDR across all data columns is calculated.
  multi_core: TRUE              ## If TRUE processing will be parallelized across gene sets using (N-1) CPU cores.


######################################
## ssgsea preprocessGCT parameters   
panoply_preprocess_gct:
 level: gc                      ## Mode of report, 'ssc' - single-site-centric, 'gc' - gene-centric, 'gcr' - gene-centric-redundant.
 id_type: sm                    ## Notation of site-ids: 'sm' - Spectrum Mill; 'wg' - Web Gestalt; 'ph' - Philosopher
 id_type_out: seqwin            ## Type of site id for output: 'uniprot', 'refseq', 'seqwin', 'psp' (psp not implemented yet).
 acc_type_in: refseq            ## Type of accession number in 'rid' object in GCT file (uniprot, refseq, symbol).
 seqwin_column: VMsiteFlanks    ## Column containing flanking sequences, separated by '|'. Only relevant if '--id_type_out' = 'seqwin'
 gene_symbol_column: geneSymbol ## Name of column listing gene names; used for gene centric reports.
 humanize_gene_names: FALSE     ## If TRUE, gene symbols will be capitalized (for e.g. mouse or rat).
 sgt_column: subgroupNum        ## Column used to collpase subgroup-top (SGT) reports.
 localized: TRUE                ## CAUTION: it is NOT RECOMMENDED to set this flag to FALSE. If TRUE only fully localized sites will be considered.
 mode: median                   ## Determines how multiple sites per gene will be combined: sd - most variable (standard deviation) across sample columns; SGT - subgroup top: first subgroup in protein group (Spectrum Mill); abs.max - for log-transformed, signed p-values.
 residue: "S|T|Y"               ## Modified residues, e.g. "S|T|Y" or "K".
 ptm: p                         ## Type of modification, e.g "p" or "ac".
 preprocess_gct: TRUE           ## If FALSE nothing will be done; probably needed for to make this step optional in WDL.
 
################################
## ssSGEA report
panoply_ssgsea_report:
  fdr: 0.05                     ## max. FDR
  top_n: 20                     ## max. number of significant hits to plot/label

###################################
## DEV_ parameters for developers 
## - DO NOT EDIT
DEV_sample_annotation:
  sample_id_col_name: "Sample.ID"
  experiment_col_name: "Experiment"
  channel_col_name: "Channel"
  participant_col_name: "Participant"
  type_col_name: "Type"
  
  QC:
    qc_col: QC.status
    qc_pass_label: QC.pass

  gct_file_ids: #used in config.r 
    proteome:
      id_col: 1
      desc_col: 2
      
    phosphoproteome:
      id_col: 1
      desc_col: 2
      

DEV_directory_and_file_names:
  # only run-pipeline.sh cmap values:
  cmap_group: 'all'
  cmap_type: 'pome'
  cmap_scores: ''
  cmap_nperm: '0'
  cmap_permutation: 'tmp'
  cmap_config_file: ''
  # other:
  rna_output_prefix: "rna-seq"
  gene_mapping:
    official_genesyms: "gene-symbol-map.csv"
    protein_gene_map: "RefSeq-GeneName-Map-20170701.txt"

  # data.dir in config.r:
  data_dir: "data" 
  # pre.dir in config.r:                 
  parse_dir: "parsed-data" 
  # norm.dir in config.r:         
  norm_dir: "normalized-data" 
  # filt.dir in config.r:         
  filt_dir: "filtered-data" 
  # harmonize.dir in config.r:      
  harmonize_dir: "harmonized-data" 
  # only run-pipeline.sh: 
  rna_dir: "rna"
  cna_dir: "cna"
  cmap_dir: "cmap"
  cmap_prefix: "$cmap_group-$cmap_type"
  qc_dir: "sample-qc"
  assoc_dir: "association"
  cluster_dir: "clustering"
  code_dir: ''
  common_data: ''

  # affects expt.design.file in config.r:
  expt_design_file: "exptdesign.csv"  
  parsed_output: "$prefix-ratio.gct"
  normalized_output: "$prefix-ratio-norm.gct"
  filtered_output: "$prefix-ratio-norm-filt$subset_str.gct"
  # affects rna.data.file in config.r:
  rna_data_file: "rna-data.gct" 
  # affects cna.data.file in config.r :     
  cna_data_file: "cna-data.gct" 
